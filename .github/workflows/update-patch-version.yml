name: Manual or Comment Patch Version

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: "Pull Request number"
        required: true
        type: number

  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: read

jobs:
  patch_version:
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request &&
       startsWith(github.event.comment.body, '/update-patch-version'))
    runs-on: ubuntu-latest
    steps:
      - name: Determine PR number
        id: pr
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "pr_number=${{ inputs.pr_number }}" >> $GITHUB_OUTPUT
          else
            echo "pr_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          fi

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Get PR info
        id: info
        run: |
          repo="${{ github.repository }}"
          pr_data=$(gh pr view ${{ steps.pr.outputs.pr_number }} --repo "$repo" --json headRefName,baseRefName,headRepositoryOwner,headRepository -q "{ref: .headRefName, base: .baseRefName, owner: .headRepositoryOwner.login, repo: .headRepository.name}")
          echo "ref=$(echo $pr_data | jq -r .ref)" >> $GITHUB_OUTPUT
          echo "base=$(echo $pr_data | jq -r .base)" >> $GITHUB_OUTPUT
          echo "owner=$(echo $pr_data | jq -r .owner)" >> $GITHUB_OUTPUT
          echo "repo=$(echo $pr_data | jq -r .repo)" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.info.outputs.ref }}
          repository: ${{ steps.info.outputs.owner }}/${{ steps.info.outputs.repo }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Ensure base is main
        run: |
          if [ "${{ steps.info.outputs.base }}" != "main" ]; then
            echo "Base branch is not 'main'. Exiting."
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Fetch and merge main
        run: |
          git fetch origin
          git merge origin/main --no-edit

      - name: Bump patch version
        run: npm version patch --no-git-tag-version

      - name: Commit and push version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "パッチバージョンアップ" || echo "No changes"
          git push
